{
	"name": "Parallel_testing_for_each_all",
	"properties": {
		"activities": [
			{
				"name": "copy data objects concurrently",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.folders",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "backup data",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "source_data_object_all",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "target_data_object_all",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"folders": {
				"type": "array",
				"defaultValue": [
					"dataobject00",
					"dataobject01",
					"dataobject02",
					"dataobject03",
					"dataobject04",
					"dataobject05",
					"dataobject06",
					"dataobject07",
					"dataobject08",
					"dataobject09",
					"dataobject10",
					"dataobject11",
					"dataobject12",
					"dataobject13",
					"dataobject14",
					"dataobject15",
					"dataobject16",
					"dataobject17",
					"dataobject18",
					"dataobject19",
					"dataobject20",
					"dataobject21",
					"dataobject22",
					"dataobject23",
					"dataobject24",
					"dataobject25",
					"dataobject26",
					"dataobject27",
					"dataobject28",
					"dataobject29",
					"dataobject30",
					"dataobject31",
					"dataobject32",
					"dataobject33",
					"dataobject34",
					"dataobject35",
					"dataobject36",
					"dataobject37",
					"dataobject38",
					"dataobject39",
					"dataobject40",
					"dataobject41",
					"dataobject42",
					"dataobject43",
					"dataobject44",
					"dataobject45",
					"dataobject46",
					"dataobject47",
					"dataobject48",
					"dataobject49",
					"dataobject50",
					"dataobject51",
					"dataobject52",
					"dataobject53",
					"dataobject54",
					"dataobject55",
					"dataobject56",
					"dataobject57",
					"dataobject58",
					"dataobject59",
					"dataobject60",
					"dataobject61",
					"dataobject62",
					"dataobject63",
					"dataobject64",
					"dataobject65",
					"dataobject66",
					"dataobject67",
					"dataobject68",
					"dataobject69",
					"dataobject70",
					"dataobject71",
					"dataobject72",
					"dataobject73",
					"dataobject74",
					"dataobject75",
					"dataobject76",
					"dataobject77",
					"dataobject78",
					"dataobject79",
					"dataobject80",
					"dataobject81",
					"dataobject82",
					"dataobject83",
					"dataobject84",
					"dataobject85",
					"dataobject86",
					"dataobject87",
					"dataobject88",
					"dataobject89",
					"dataobject90",
					"dataobject91",
					"dataobject92",
					"dataobject93",
					"dataobject94",
					"dataobject95",
					"dataobject96",
					"dataobject97",
					"dataobject98",
					"dataobject99"
				]
			}
		},
		"annotations": []
	}
}