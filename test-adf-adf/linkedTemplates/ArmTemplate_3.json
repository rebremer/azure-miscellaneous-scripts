{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "test-adf-adf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "url",
						"type": "varchar"
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "text",
						"type": "varchar"
					},
					{
						"name": "title_vector",
						"type": "varchar"
					},
					{
						"name": "content_vector",
						"type": "varchar"
					},
					{
						"name": "vector_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "silver_fact_nested_test"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_q83')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DeliveryDateKey",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Package",
						"type": "varchar"
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quarter",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "silver_fact_sale_v2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Xml_output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Xml",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "xmltest"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_silver_fact_sale')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DeliveryDateKey",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "Package",
						"type": "varchar"
					},
					{
						"name": "Quantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quarter",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "silver_fact_sale"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testgdpinformationfblobdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "testgdpinformationfblob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "privtest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_hns_sink_blob')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "GDPstorageaccount",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "testgdpinformationfblob",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"parameters{",
						"     par_container as string (\"testsourcesink\"),",
						"     par_source as string (\"source\"),",
						"     par_sink as string (\"sink\")",
						"}",
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet',",
						"     fileSystem: ($par_container),",
						"     folderPath: ($par_source)) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: ($par_container),",
						"     folderPath: ($par_sink),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     preCommands: [],",
						"     postCommands: []) ~> sink1"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle2016issue_vnet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "TESTRBADMIN.TEST_PROD_ISSUE_v2 (2).parquet",
						"fileSystem": "oracle2016"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleSHIR2016issue_stor_ora')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ADLSgen2 to Oracle",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"additionalColumns": [
									{
										"name": "KKKKKv2",
										"value": "999999999999999.99999999999999 "
									}
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "TESTRBADMIN.TEST_PROD_ISSUE_v2 (2).parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "OracleSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "AAAAA",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "AAAAA",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BBBBB",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "BBBBB",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CCCCC",
											"type": "DateTime",
											"physicalType": "INT96"
										},
										"sink": {
											"name": "CCCCC",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DDDDD",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "DDDDD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EEEEE",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "EEEEE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FFFFF",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "FFFFF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GGGGG",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "GGGGG",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HHHHH",
											"type": "String",
											"physicalType": "UTF8"
										},
										"sink": {
											"name": "HHHHH",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "KKKKKv2",
											"physicalType": "DOUBLE"
										},
										"sink": {
											"name": "KKKKK",
											"type": "DOUBLE"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Oracle2016issue",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Oracle2016",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle2016issue_vnet_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "parquetcasted_data.parquet",
						"fileSystem": "oracle2016"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "AAAAA",
						"type": "UTF8"
					},
					{
						"name": "BBBBB",
						"type": "UTF8"
					},
					{
						"name": "CCCCC",
						"type": "INT96"
					},
					{
						"name": "DDDDD",
						"type": "UTF8"
					},
					{
						"name": "EEEEE",
						"type": "UTF8"
					},
					{
						"name": "FFFFF",
						"type": "UTF8"
					},
					{
						"name": "GGGGG",
						"type": "UTF8"
					},
					{
						"name": "HHHHH",
						"type": "UTF8"
					},
					{
						"name": "IIIII",
						"type": "UTF8"
					},
					{
						"name": "JJJJJ",
						"type": "INT96"
					},
					{
						"name": "KKKKK",
						"type": "DOUBLE"
					},
					{
						"name": "LLLLL",
						"type": "UTF8"
					},
					{
						"name": "MMMMM",
						"type": "UTF8"
					},
					{
						"name": "NNNNN",
						"type": "INT96"
					},
					{
						"name": "OOOO",
						"type": "UTF8"
					},
					{
						"name": "PPPP",
						"type": "UTF8"
					},
					{
						"name": "QQQQ",
						"type": "UTF8"
					},
					{
						"name": "RRRR",
						"type": "INT96"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GDPStor_privBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stor to blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "person//person.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.person"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "firstname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lastname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GDPstorDFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testgdpinformationfblobdataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-07T18:28:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/testgdpinformationfblobdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GDPStor_privSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stor to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "person//person.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.person"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "sdf",
									"wildcardFileName": "fds",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SaleKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CityKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BillToCustomerKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StockItemKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InvoiceDateKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DeliveryDateKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "SalespersonKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WWIInvoiceID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TaxRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalExcludingTax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TaxAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalIncludingTax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalDryItems",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TotalChillerItems",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineageKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "fulldataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_silver_fact_sale",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-06T15:09:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_silver_fact_sale')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT distinct([SaleKey])\n      ,[CityKey]\n      ,[CustomerKey]\n      ,[BillToCustomerKey]\n      ,[StockItemKey]\n      ,[InvoiceDateKey]\n      ,[DeliveryDateKey]\n      ,[SalespersonKey]\n      ,[WWIInvoiceID]\n      ,[Package]\n      ,[Quantity]\n      ,[UnitPrice]\n      ,[TaxRate]\n      ,[TotalExcludingTax]\n      ,[TaxAmount]\n      ,[Profit]\n      ,[TotalIncludingTax]\n      ,[TotalDryItems]\n      ,[TotalChillerItems]\n      ,[LineageKey]\n      ,[Quarter]\n  FROM [dbo].[silver_fact_sale]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SaleKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SaleKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CityKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BillToCustomerKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StockItemKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InvoiceDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DeliveryDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "SalespersonKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WWIInvoiceID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Package",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TaxRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalExcludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TaxAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalIncludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalDryItems",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TotalChillerItems",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineageKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Quarter",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Quarter",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_q83",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-13T18:47:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_q83')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL to storage')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL to storage",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TOP (10) [id]\n      ,[url]\n      ,[title]\n      ,[text]\n      ,[title_vector]\n      ,[content_vector]\n      ,[vector_id]\n  FROM [dbo].[wikipedia_articles_embeddings]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-13T18:47:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_nested_pipeline_worker1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=37955/part-00000-996cea76-7a66-4730-80dc-53826357b53f.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_nested_pipeline_worker2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=38005/part-00000-185bd9c8-55c7-4826-9b74-b7318ae4130b.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_nested_pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[silver_fact_nested_test]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=37955/part-00000-996cea76-7a66-4730-80dc-53826357b53f.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=38005/part-00000-185bd9c8-55c7-4826-9b74-b7318ae4130b.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Check db queries 30s",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('iterator'),30)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Sessions1_fe_copy1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": "SELECT\n    s.session_id,\n    c.client_net_address AS [Client IP Address],\n    s.host_name AS [Host Name],\n    c.connect_time AS [Connection Time],\n    r.command AS [Command],\n    t.text AS [SQL Text],\n\ts.last_request_start_time,\n\ts.last_request_end_time,\n\tc.last_read,\n\tc.last_write\nFROM sys.dm_exec_sessions AS s\nJOIN sys.dm_exec_connections AS c ON s.session_id = c.session_id\nCROSS APPLY sys.dm_exec_sql_text(c.most_recent_sql_handle) AS t\nJOIN sys.dm_exec_requests AS r ON s.session_id = r.session_id\nWHERE s.is_user_process = 1\n  and t.text like 'insert%'\nORDER BY s.session_id;",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "set dummy_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Sessions1_fe_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "dummy",
										"value": {
											"value": "@variables('iterator')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "set dummy_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "iterator",
										"value": {
											"value": "@add(variables('dummy'),1)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1_copy1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Set variable1_copy1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 30
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Copy data3",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[silver_fact_nested_test]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=37955/part-00000-996cea76-7a66-4730-80dc-53826357b53f.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"iterator": {
						"type": "Integer",
						"defaultValue": 0
					},
					"dummy": {
						"type": "Integer",
						"defaultValue": 0
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_nested_pipelines_dtu')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[silver_fact_nested_test]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=37955/part-00000-996cea76-7a66-4730-80dc-53826357b53f.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Parquet1",
								"type": "DatasetReference",
								"parameters": {
									"filename": "CityKey=38005/part-00000-185bd9c8-55c7-4826-9b74-b7318ae4130b.c000.snappy.parquet",
									"foldername": "silver/silver_fact_sale_citykey"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csv_to_sql_fulldataset')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fulldatasetcopy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "raw/csv/full/fact_sale_1y_full",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "SaleKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SaleKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CityKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CustomerKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BillToCustomerKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "StockItemKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InvoiceDateKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "DeliveryDateKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "SalespersonKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WWIInvoiceID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int16",
											"physicalType": "smallint"
										}
									},
									{
										"source": {
											"name": "UnitPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TaxRate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalExcludingTax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TaxAmount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalIncludingTax",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 6,
											"precision": 38
										}
									},
									{
										"source": {
											"name": "TotalDryItems",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "TotalChillerItems",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LineageKey",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Fullcsvdataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sql_silver_fact_sale",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_silver_fact_sale')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Source_sink_same_container_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "testgdpstor2blob",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "sql_silver_fact_sale",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delta',",
						"     container: 'fabricdemo',",
						"     folderPath: 'silver/silver_fact_sale') ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          SaleKey as integer,",
						"          CityKey as integer,",
						"          CustomerKey as integer,",
						"          BillToCustomerKey as integer,",
						"          StockItemKey as integer,",
						"          InvoiceDateKey as timestamp,",
						"          DeliveryDateKey as timestamp,",
						"          SalespersonKey as integer,",
						"          WWIInvoiceID as integer,",
						"          Description as string,",
						"          Package as string,",
						"          Quantity as integer,",
						"          UnitPrice as decimal(38,6),",
						"          TaxRate as decimal(38,6),",
						"          TotalExcludingTax as decimal(38,6),",
						"          TaxAmount as decimal(38,6),",
						"          Profit as decimal(38,6),",
						"          TotalIncludingTax as decimal(38,6),",
						"          TotalDryItems as integer,",
						"          TotalChillerItems as integer,",
						"          LineageKey as integer,",
						"          Quarter as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sql_silver_fact_sale')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cast oracle data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Oracle2016issue_vnet",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Oracle2016issue_vnet_sink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "castdata",
							"description": "cast data"
						}
					],
					"scriptLines": [
						"source(output(",
						"          AAAAA as string,",
						"          BBBBB as string,",
						"          CCCCC as timestamp,",
						"          DDDDD as string,",
						"          EEEEE as string,",
						"          FFFFF as string,",
						"          GGGGG as string,",
						"          HHHHH as string,",
						"          IIIII as string,",
						"          JJJJJ as timestamp,",
						"          KKKKK as string,",
						"          LLLLL as string,",
						"          MMMMM as string,",
						"          NNNNN as timestamp,",
						"          OOOO as string,",
						"          PPPP as string,",
						"          QQQQ as string,",
						"          RRRR as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'parquet') ~> source1",
						"source1 derive(KKKKK = round(9999999999999.33333333333333333333333333,5)\r",
						"\r",
						"/*round(toDouble(KKKKK),5)*/\r",
						"\r",
						"/*round(9999999999999.33333333333333333333333333,5)*/\r",
						",",
						"     partitionBy('hash', 1)) ~> castdata",
						"castdata sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          AAAAA as string,",
						"          BBBBB as string,",
						"          CCCCC as timestamp,",
						"          DDDDD as string,",
						"          EEEEE as string,",
						"          FFFFF as string,",
						"          GGGGG as string,",
						"          HHHHH as string,",
						"          IIIII as string,",
						"          JJJJJ as timestamp,",
						"          KKKKK as double,",
						"          LLLLL as string,",
						"          MMMMM as string,",
						"          NNNNN as timestamp,",
						"          OOOO as string,",
						"          PPPP as string,",
						"          QQQQ as string,",
						"          RRRR as timestamp",
						"     ),",
						"     format: 'parquet',",
						"     partitionFileNames:['parquetcasted_data.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Oracle2016issue_vnet')]",
				"[concat(variables('factoryId'), '/datasets/Oracle2016issue_vnet_sink')]"
			]
		}
	]
}