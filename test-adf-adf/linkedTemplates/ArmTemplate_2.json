{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "test-adf-adf"
		},
		"AzureBlobStorage988_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/2a8ece59-09e0-4a84-9124-e965b97f5d2c/resourceGroups/test-onelab-rg/providers/Microsoft.Storage/storageAccounts/testgdpinformationf"
		},
		"AzureBlobStorage988_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"AzureBlobStorage988_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"testgdpinformationf.blob.core.windows.net"
			]
		},
		"gdgstordfs_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/2a8ece59-09e0-4a84-9124-e965b97f5d2c/resourceGroups/test-onelab-rg/providers/Microsoft.Storage/storageAccounts/testgdpstor2"
		},
		"gdgstordfs_properties_groupId": {
			"type": "string",
			"defaultValue": "dfs"
		},
		"priv-db_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/2a8ece59-09e0-4a84-9124-e965b97f5d2c/resourceGroups/test-adf-rg/providers/Microsoft.Sql/servers/test-priv-rbr"
		},
		"priv-db_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "West Europe",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"copyComputeScaleProperties": {
							"dataIntegrationUnit": 16,
							"timeToLive": 10
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/AzureBlobStorage988')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('AzureBlobStorage988_properties_privateLinkResourceId')]",
				"groupId": "[parameters('AzureBlobStorage988_properties_groupId')]",
				"fqdns": "[parameters('AzureBlobStorage988_properties_fqdns')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/gdgstordfs')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('gdgstordfs_properties_privateLinkResourceId')]",
				"groupId": "[parameters('gdgstordfs_properties_groupId')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/priv-db')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('priv-db_properties_privateLinkResourceId')]",
				"groupId": "[parameters('priv-db_properties_groupId')]"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure ML')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {
									"folder": "azureml-blobstore-f566be46-39a8-407b-8a68-76fe665e86bd"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {
									"folder": "azureml-blobstore-c9527502-8fc9-44c2-867f-39bbedfec6ae"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-01-17T19:22:53Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GDPSecondaryStor_privStor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stor to stor",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "person//person.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.person"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "firstname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lastname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GDPsecondary",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testadfstorrbrinf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-05T18:00:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GDPStor_privStor')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stor to stor",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "person//person.txt"
							},
							{
								"name": "Destination",
								"value": "dbo.person"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "firstname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "firstname",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastname",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "lastname",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "GDPstorDFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testadfstorrbrinf",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-05T13:57:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parallel testing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greater(variables('iterator'),99)",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "parallel testing",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "PreserveHierarchy"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "parallel_test_source",
											"type": "DatasetReference",
											"parameters": {
												"number": "78"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "test_parallel_target",
											"type": "DatasetReference",
											"parameters": {
												"number": "78"
											}
										}
									]
								},
								{
									"name": "set dummy",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "parallel testing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "dummy",
										"value": {
											"value": "@variables('iterator')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set variable1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "set dummy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "iterator",
										"value": {
											"value": "@add(variables('dummy'),1)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"dummy": {
						"type": "Integer",
						"defaultValue": 0
					},
					"iterator": {
						"type": "Integer",
						"defaultValue": 0
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parallel testing_for_each')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parallel copy",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('item_array')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "parallel_test_source",
											"type": "DatasetReference",
											"parameters": {
												"number": "@item().name"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "backupstorbinary",
											"type": "DatasetReference",
											"parameters": {
												"number": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"dummy": {
						"type": "Integer",
						"defaultValue": 0
					},
					"iterator": {
						"type": "Integer",
						"defaultValue": 0
					},
					"item_array": {
						"type": "Array",
						"defaultValue": [
							0,
							1,
							2,
							3,
							4,
							5,
							6,
							7,
							8,
							9,
							10,
							11,
							12,
							13,
							14,
							15,
							16,
							17,
							18,
							19,
							20,
							21,
							22,
							23,
							24,
							25,
							26,
							27,
							28,
							29,
							30,
							31,
							32,
							33,
							34,
							35,
							36,
							37,
							38,
							39,
							40,
							41,
							42,
							43,
							44,
							45,
							46,
							47,
							48,
							49,
							50,
							51,
							52,
							53,
							54,
							55,
							56,
							57,
							58,
							59,
							60,
							61,
							62,
							63,
							64,
							65,
							66,
							67,
							68,
							69,
							70,
							71,
							72,
							73,
							74,
							75,
							76,
							77,
							78,
							79,
							80,
							81,
							82,
							83,
							84,
							85,
							86,
							87,
							88,
							89,
							90,
							91,
							92,
							93,
							94,
							95,
							96,
							97,
							98,
							99
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parallel_testing_for_each_all')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copy data objects concurrently",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.folders",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "backup data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "source_data_object_all",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "target_data_object_all",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"folders": {
						"type": "array",
						"defaultValue": [
							"dataobject00",
							"dataobject01",
							"dataobject02",
							"dataobject03",
							"dataobject04",
							"dataobject05",
							"dataobject06",
							"dataobject07",
							"dataobject08",
							"dataobject09",
							"dataobject10",
							"dataobject11",
							"dataobject12",
							"dataobject13",
							"dataobject14",
							"dataobject15",
							"dataobject16",
							"dataobject17",
							"dataobject18",
							"dataobject19",
							"dataobject20",
							"dataobject21",
							"dataobject22",
							"dataobject23",
							"dataobject24",
							"dataobject25",
							"dataobject26",
							"dataobject27",
							"dataobject28",
							"dataobject29",
							"dataobject30",
							"dataobject31",
							"dataobject32",
							"dataobject33",
							"dataobject34",
							"dataobject35",
							"dataobject36",
							"dataobject37",
							"dataobject38",
							"dataobject39",
							"dataobject40",
							"dataobject41",
							"dataobject42",
							"dataobject43",
							"dataobject44",
							"dataobject45",
							"dataobject46",
							"dataobject47",
							"dataobject48",
							"dataobject49",
							"dataobject50",
							"dataobject51",
							"dataobject52",
							"dataobject53",
							"dataobject54",
							"dataobject55",
							"dataobject56",
							"dataobject57",
							"dataobject58",
							"dataobject59",
							"dataobject60",
							"dataobject61",
							"dataobject62",
							"dataobject63",
							"dataobject64",
							"dataobject65",
							"dataobject66",
							"dataobject67",
							"dataobject68",
							"dataobject69",
							"dataobject70",
							"dataobject71",
							"dataobject72",
							"dataobject73",
							"dataobject74",
							"dataobject75",
							"dataobject76",
							"dataobject77",
							"dataobject78",
							"dataobject79",
							"dataobject80",
							"dataobject81",
							"dataobject82",
							"dataobject83",
							"dataobject84",
							"dataobject85",
							"dataobject86",
							"dataobject87",
							"dataobject88",
							"dataobject89",
							"dataobject90",
							"dataobject91",
							"dataobject92",
							"dataobject93",
							"dataobject94",
							"dataobject95",
							"dataobject96",
							"dataobject97",
							"dataobject98",
							"dataobject99/Year=2000/Quarter=1",
							"dataobject99/Year=2000/Quarter=2",
							"dataobject99/Year=2000/Quarter=3",
							"dataobject99/Year=2000/Quarter=4",
							"dataobject99/Year=2001",
							"dataobject99/Year=2002",
							"dataobject99/_delta_log",
							"dataobject99/dataobject00",
							"dataobject99/dataobject01",
							"dataobject99/dataobject02",
							"dataobject99/dataobject03",
							"dataobject99/dataobject04",
							"dataobject99/dataobject05",
							"dataobject99/dataobject06",
							"dataobject99/dataobject07",
							"dataobject99/dataobject08",
							"dataobject99/dataobject09",
							"dataobject99/dataobject10",
							"dataobject99/dataobject11",
							"dataobject99/dataobject12",
							"dataobject99/dataobject13",
							"dataobject99/dataobject14",
							"dataobject99/dataobject15",
							"dataobject99/dataobject16",
							"dataobject99/dataobject17",
							"dataobject99/dataobject18",
							"dataobject99/dataobject19",
							"dataobject99/dataobject20",
							"dataobject99/dataobject21",
							"dataobject99/dataobject22",
							"dataobject99/dataobject23",
							"dataobject99/dataobject24",
							"dataobject99/dataobject25",
							"dataobject99/dataobject26",
							"dataobject99/dataobject27",
							"dataobject99/dataobject28",
							"dataobject99/dataobject29",
							"dataobject99/dataobject30",
							"dataobject99/dataobject31",
							"dataobject99/dataobject32",
							"dataobject99/dataobject33",
							"dataobject99/dataobject34",
							"dataobject99/dataobject35",
							"dataobject99/dataobject36",
							"dataobject99/dataobject37",
							"dataobject99/dataobject38",
							"dataobject99/dataobject39",
							"dataobject99/dataobject40",
							"dataobject99/dataobject41",
							"dataobject99/dataobject42",
							"dataobject99/dataobject43",
							"dataobject99/dataobject44",
							"dataobject99/dataobject45",
							"dataobject99/dataobject46",
							"dataobject99/dataobject47",
							"dataobject99/dataobject48",
							"dataobject99/dataobject49",
							"dataobject99/dataobject50",
							"dataobject99/dataobject51",
							"dataobject99/dataobject52",
							"dataobject99/dataobject53",
							"dataobject99/dataobject54",
							"dataobject99/dataobject55",
							"dataobject99/dataobject56",
							"dataobject99/dataobject57",
							"dataobject99/dataobject58",
							"dataobject99/dataobject59",
							"dataobject99/dataobject60",
							"dataobject99/dataobject61",
							"dataobject99/dataobject62",
							"dataobject99/dataobject63",
							"dataobject99/dataobject64",
							"dataobject99/dataobject65",
							"dataobject99/dataobject66",
							"dataobject99/dataobject67",
							"dataobject99/dataobject68",
							"dataobject99/dataobject69",
							"dataobject99/dataobject70",
							"dataobject99/dataobject71",
							"dataobject99/dataobject72",
							"dataobject99/dataobject73",
							"dataobject99/dataobject74",
							"dataobject99/dataobject75",
							"dataobject99/dataobject76",
							"dataobject99/dataobject77",
							"dataobject99/dataobject78",
							"dataobject99/dataobject79",
							"dataobject99/dataobject80",
							"dataobject99/dataobject81",
							"dataobject99/dataobject82",
							"dataobject99/dataobject83",
							"dataobject99/dataobject84",
							"dataobject99/dataobject85",
							"dataobject99/dataobject86",
							"dataobject99/dataobject87",
							"dataobject99/dataobject88",
							"dataobject99/dataobject89",
							"dataobject99/dataobject90",
							"dataobject99/dataobject91",
							"dataobject99/dataobject92",
							"dataobject99/dataobject93",
							"dataobject99/dataobject94",
							"dataobject99/dataobject95",
							"dataobject99/dataobject96",
							"dataobject99/dataobject97",
							"dataobject99/dataobject98"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parallel_testing_for_each_lookup_folders_dataobject')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_folders_data_object",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Binary_lookup_folders_data_object",
								"type": "DatasetReference",
								"parameters": {
									"data_object": {
										"value": "@pipeline().parameters.data_object",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "copy folder recursively",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_folders_data_object",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_folders_data_object').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 10,
							"activities": [
								{
									"name": "backup data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "source_data_object_folder",
											"type": "DatasetReference",
											"parameters": {
												"dataobject": {
													"value": "@pipeline().parameters.data_object",
													"type": "Expression"
												},
												"folder": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "target_data_object_folder",
											"type": "DatasetReference",
											"parameters": {
												"dataobject": {
													"value": "@pipeline().parameters.data_object",
													"type": "Expression"
												},
												"folder": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"data_object": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "max_values_v2.txt",
						"fileSystem": "oracle2016"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "sqldb"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OdbcTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBuiltInODBC",
					"type": "LinkedServiceReference",
					"parameters": {
						"asdf": "adsf"
					}
				},
				"annotations": [],
				"type": "OdbcTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle2016')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle2016",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "TESTRBADMIN",
					"table": "TEST_PROD_ISSUE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle2016issue')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "oracle2016"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBuiltIn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "TESTRBADMIN",
					"table": "BOOKS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1ODBC')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBuiltInODBC",
					"type": "LinkedServiceReference",
					"parameters": {
						"asdf": "adsf"
					}
				},
				"annotations": [],
				"type": "OdbcTable",
				"schema": [],
				"typeProperties": {
					"tableName": "hjg"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTableProdV2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle2016",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "TESTRBADMIN",
					"table": "TEST_PROD_ISSUE2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().foldername",
							"type": "Expression"
						},
						"fileSystem": "fabricdemo"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SaleKey",
						"type": "INT64"
					},
					{
						"name": "CityKey",
						"type": "INT32"
					},
					{
						"name": "CustomerKey",
						"type": "INT32"
					},
					{
						"name": "BillToCustomerKey",
						"type": "INT32"
					},
					{
						"name": "StockItemKey",
						"type": "INT32"
					},
					{
						"name": "InvoiceDateKey",
						"type": "INT96"
					},
					{
						"name": "DeliveryDateKey",
						"type": "INT96"
					},
					{
						"name": "SalespersonKey",
						"type": "INT32"
					},
					{
						"name": "WWIInvoiceID",
						"type": "INT32"
					},
					{
						"name": "Description",
						"type": "UTF8"
					},
					{
						"name": "Package",
						"type": "UTF8"
					},
					{
						"name": "Quantity",
						"type": "INT32"
					},
					{
						"name": "UnitPrice",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "DECIMAL",
						"precision": 29,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "Profit",
						"type": "DECIMAL",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 6
					},
					{
						"name": "TotalDryItems",
						"type": "INT32"
					},
					{
						"name": "TotalChillerItems",
						"type": "INT32"
					},
					{
						"name": "LineageKey",
						"type": "INT32"
					},
					{
						"name": "Quarter",
						"type": "INT32"
					}
				]
			},
			"dependsOn": []
		}
	]
}